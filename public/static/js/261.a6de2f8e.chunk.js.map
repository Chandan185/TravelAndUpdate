{"version":3,"file":"static/js/261.a6de2f8e.chunk.js","mappings":"4KAYA,EARa,SAAAA,GACX,OACE,gBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,MAAM,SAC3DF,EAAMG,UAGb,C,8ICMA,EAZe,SAACH,GACd,OACE,gBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,MAAM,UAC9D,gBACEE,IAAKJ,EAAMK,MACXC,IAAKN,EAAMM,IACXJ,MAAO,CAAEK,MAAOP,EAAMO,MAAOC,OAAQR,EAAMO,UAInD,E,SCcA,EAvBiB,SAACP,GAChB,OACE,eAAIC,UAAU,YAAW,UACvB,SAACQ,EAAA,EAAI,CAACR,UAAU,qBAAoB,UAClC,UAAC,KAAI,CAACS,GAAE,WAAMV,EAAMW,GAAE,WAAU,WAC9B,gBAAKV,UAAU,mBAAkB,UAC/B,SAAC,EAAM,CACLI,MAAK,UAAKO,gCAA+B,YAAIZ,EAAMK,OACnDC,IAAKN,EAAMa,UAGf,iBAAKZ,UAAU,kBAAiB,WAC9B,wBAAKD,EAAMa,QACX,0BACGb,EAAMc,WAAU,IAAwB,IAArBd,EAAMc,WAAmB,QAAU,qBAOrE,ECIA,EA1BiB,SAACd,GAChB,OAA2B,IAAvBA,EAAMe,MAAMC,QAEZ,gBAAKf,UAAU,SAAQ,UACrB,SAACQ,EAAA,EAAI,WACH,gDAMJ,eAAIR,UAAU,aAAY,SACvBD,EAAMe,MAAME,KAAI,SAACC,GAAI,OACpB,SAAC,EAAQ,CAEPP,GAAIO,EAAKP,GACTE,KAAMK,EAAKL,KACXR,MAAOa,EAAKb,MACZS,WAAYI,EAAKC,OAAOH,QAJnBE,EAAKP,GAKV,KAKZ,E,SC2CA,EA9Bc,WACZ,OAAsDS,EAAAA,EAAAA,KAA9CC,EAAS,EAATA,UAAWC,EAAK,EAALA,MAAOC,EAAW,EAAXA,YAAaC,EAAU,EAAVA,WACvC,GAAsCC,EAAAA,EAAAA,YAAU,eAAzCC,EAAW,KAAEC,EAAc,KAelC,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,yCAAG,kHAEYN,EACzBX,2CACA,KAAD,EAFKkB,EAAY,OAIlBH,EAAeG,EAAaC,OAAO,uGAEtC,kBARe,mCAShBF,GACF,GAAG,CAACN,KAGF,UAAC,WAAc,WACZD,IAAS,SAACU,EAAA,EAAU,CAACV,MAAOA,EAAOW,QAAST,IAC5CH,IACC,gBAAKpB,UAAU,SAAQ,UACrB,SAACiC,EAAA,EAAc,OAGjBb,GAAaK,IAAe,SAAC,EAAQ,CAACX,MAAOW,MAGrD,C","sources":["shared/Components/UIElement/Card.js","shared/Components/UIElement/Avatar.js","users/components/UserItem.js","users/components/UserList.js","users/pages/Users.js"],"sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\r\n\r\nimport \"./Avatar.css\";\r\n\r\nconst Avatar = (props) => {\r\n  return (\r\n    <div className={`avatar ${props.className}`} style={props.style}>\r\n      <img\r\n        src={props.image}\r\n        alt={props.alt}\r\n        style={{ width: props.width, height: props.width }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./UserItem.css\";\r\nimport Avatar from \"../../shared/Components/UIElement/Avatar\";\r\nimport Card from \"../../shared/Components/UIElement/Card\";\r\nconst UserItem = (props) => {\r\n  return (\r\n    <li className=\"user-item\">\r\n      <Card className=\"user-item__content\">\r\n        <Link to={`/${props.id}/places`}>\r\n          <div className=\"user-item__image\">\r\n            <Avatar\r\n              image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n              alt={props.name}\r\n            />\r\n          </div>\r\n          <div className=\"user-item__info\">\r\n            <h2>{props.name}</h2>\r\n            <h3>\r\n              {props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React from \"react\";\r\nimport UserItem from \"./UserItem\";\r\nimport Card from \"../../shared/Components/UIElement/Card\";\r\nimport \"./UserList.css\";\r\nconst UserList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>No Users Found</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <ul className=\"users-list\">\r\n        {props.items.map((user) => (\r\n          <UserItem\r\n            key={user.id}\r\n            id={user.id}\r\n            name={user.name}\r\n            image={user.image}\r\n            placeCount={user.places.length}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n};\r\n\r\nexport default UserList;\r\n","// import UserList from \"../components/UserList\";\r\n// import { useState, useEffect, Fragment } from \"react\";\r\nimport LoadingSpinner from \"../../shared/Components/UIElement/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/Components/UIElement/ErrorModal\";\r\n// import { useHttpClient } from \"../../shared/Hooks/http-hook\";\r\n// const Users = () => {\r\n//   const [loadedUsers, setloadedUsers] = useState();\r\n//   const { isloading, error, sendRequest, clearError } = useHttpClient();\r\n//   useEffect(() => {\r\n//     const fetchUsers = async () => {\r\n//       try {\r\n//         const responseData = await sendRequest(\r\n//           \"${process.env.REACT_APP_BACKEND_URL}/users\"\r\n//         );\r\n//         setloadedUsers(responseData.users);\r\n//       } catch (err) {}\r\n//     };\r\n//     fetchUsers();\r\n//   }, [sendRequest]);\r\n\r\n//   return (\r\n//     <Fragment>\r\n//       {error && <ErrorModal error={error} onClear={clearError} />}\r\n//       {isloading && (\r\n//         <div className=\"center\">\r\n//           <LoadingSpinner />\r\n//         </div>\r\n//       )}\r\n//       {!isloading && loadedUsers && <UserList items={loadedUsers} />}\r\n//     </Fragment>\r\n//   );\r\n// };\r\n\r\n// export default Users;\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport UserList from \"../components/UserList\";\r\n// import ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\n// import LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/Hooks/http-hook\";\r\n\r\nconst Users = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_ASSET_URL + \"/api/users\"\r\n        );\r\n\r\n        setLoadedUsers(responseData.users);\r\n      } catch (err) {}\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {error && <ErrorModal error={error} onClear={clearError} />}\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UserList items={loadedUsers} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"names":["props","className","style","children","src","image","alt","width","height","Card","to","id","process","name","placeCount","items","length","map","user","places","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedUsers","setLoadedUsers","useEffect","fetchUsers","responseData","users","ErrorModal","onClear","LoadingSpinner"],"sourceRoot":""}