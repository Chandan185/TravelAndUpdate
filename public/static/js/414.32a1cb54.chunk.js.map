{"version":3,"file":"static/js/414.32a1cb54.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/Components/FormComponents/ImageUpload.js","shared/Components/FormComponents/Input.js","shared/Components/util/Validate.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/Hooks/Form-hook.js"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Input from \"../../shared/Components/FormComponents/Input\";\r\nimport Button from \"../../shared/Components/FormComponents/Button\";\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH,\r\n} from \"../../shared/Components/util/Validate\";\r\nimport \"./NewPlace.css\";\r\nimport { useForm } from \"../../shared/Hooks/Form-hook\";\r\nimport { useHttpClient } from \"../../shared/Hooks/http-hook\";\r\nimport { useContext } from \"react\";\r\nimport AuthContext from \"../../shared/Components/context/Auth-context\";\r\nimport ErrorModal from \"../../shared/Components/UIElement/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/Components/UIElement/LoadingSpinner\";\r\nimport ImageUpload from \"../../shared/Components/FormComponents/ImageUpload\";\r\n\r\nconst NewPlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n  let Navigate = useNavigate();\r\n  const placeSubmithandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", formState.inputs.title.value);\r\n      formData.append(\"description\", formState.inputs.description.value);\r\n      formData.append(\"address\", formState.inputs.address.value);\r\n      formData.append(\"image\", formState.inputs.image.value);\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places`,\r\n        \"POST\",\r\n        formData,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      Navigate(\"/\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {error && <ErrorModal error={error} onClear={clearError} />}\r\n      <form className=\"place-form\" onSubmit={placeSubmithandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid title.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid description (at least 5 characters).\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid address.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          id=\"image\"\r\n          onInput={inputHandler}\r\n          errorText=\"Please Provide an image.\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport Button from \"./Button\";\nimport \"./ImageUpload.css\";\n\nconst ImageUpload = (props) => {\n  const filePickerRef = useRef();\n  const [File, setFile] = useState();\n  const [previewFile, setpreviewFile] = useState();\n  const [isValid, setisValid] = useState(false);\n  useEffect(() => {\n    if (!File) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setpreviewFile(fileReader.result);\n    };\n    fileReader.readAsDataURL(File);\n  }, [File]);\n  const pickedHandler = (event) => {\n    let pickedFile;\n    let fileisValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setisValid(true);\n      fileisValid = true;\n    } else {\n      setisValid(false);\n      fileisValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileisValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && \"center\"}`}>\n        <div className=\"image-upload__preview\">\n          {previewFile && <img src={previewFile} alt=\"Preview\" />}\n          {!previewFile && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useEffect, useReducer } from \"react\";\r\nimport { validate } from \"../util/Validate\";\r\nimport \"./Input.css\";\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst Input = (props) => {\r\n  const [inputstate, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputstate;\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n  const focusHandler = () => {\r\n    dispatch({ type: \"TOUCH\" });\r\n  };\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={focusHandler}\r\n        value={inputstate.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={focusHandler}\r\n        value={inputstate.value}\r\n      />\r\n    );\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputstate.isValid && inputstate.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputstate.isValid && inputstate.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\nexport default Input;\r\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\r\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\r\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\r\nconst VALIDATOR_TYPE_MIN = \"MIN\";\r\nconst VALIDATOR_TYPE_MAX = \"MAX\";\r\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\r\nconst VALIDATOR_TYPE_FILE = \"FILE\";\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { useCallback, useReducer } from \"react\";\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      //overall form validity is checked here\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialinputs, initialValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialinputs,\r\n    isValid: initialValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n"],"names":["auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useForm","title","value","isValid","description","address","image","formState","inputHandler","Navigate","useNavigate","placeSubmithandler","event","preventDefault","formData","FormData","append","inputs","process","Authorization","token","onClear","className","onSubmit","asOverlay","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","disabled","props","filePickerRef","useRef","useState","File","setFile","previewFile","setpreviewFile","setisValid","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileisValid","target","files","length","center","src","alt","Button","onClick","current","click","inputReducer","state","action","val","validate","isTouched","useReducer","initialValue","initialValid","inputstate","dispatch","changeHandler","focusHandler","placeholder","onBlur","rows","htmlFor","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test","formReducer","formIsValid","inputId","initialinputs","initialValidity","useCallback","inputData","formValidity"],"sourceRoot":""}